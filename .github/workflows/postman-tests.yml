name: Run Postman API Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: üì¶ Install Newman HTML Reporter
        run: npm install newman-reporter-html

      - name: üîê Inject Vault Variable into Environment
        run: |
          if [ ! -f tests/environment.json ]; then
            echo "‚ùå Environment file missing"; exit 1;
          fi
          jq --arg key "$API_KEY" \
            '.values += [{"key":"vault.api-key","value":$key,"enabled":true}]' \
            tests/environment.json > tests/environment-github.json
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: üßπ Clean old reports
        run: rm -f tests/reports/*.html
        
      - name: üß™ Run Postman Tests
        run: |
          mkdir -p tests/reports
          echo "üìÅ Verifying report directory before Newman run..."
          ls -la tests/reports || echo "‚ö†Ô∏è Report directory not found"

          echo "üöÄ Running Newman..."
          npx newman run tests/ReqRes.in.postman_collection.json \
            -e tests/environment-github.json \
            --reporters cli,html \
            --reporter-html-export tests/reports/report.html \
            || echo "‚ö†Ô∏è Newman run failed"

          echo "üìÑ Checking report output..."
          ls -la tests/reports

      - name: üïµÔ∏è Inspect report folder
        run: ls -la tests/reports/

      - name: üì§ Upload HTML Report
        id: upload_report
        run: |
          REPORT_PATH="tests/reports/report.html"

          if [ -s "$REPORT_PATH" ]; then
            echo "‚úÖ report.html found"
            echo "REPORT_FILE=$REPORT_PATH" >> $GITHUB_ENV
          elif [ -s "$FALLBACK_PATH" ]; then
            echo "‚ö†Ô∏è report.html missing, using test.html"
            echo "REPORT_FILE=$FALLBACK_PATH" >> $GITHUB_ENV
          else
            echo "‚ùå No valid report found"
            echo "REPORT_FILE=" >> $GITHUB_ENV
          fi
        continue-on-error: true

      - name: üì¶ Upload Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-report
          path: ${{ steps.upload_report.outputs.REPORT_FILE }}
          retention-days: 5

      - name: üì£ Notify Slack
        if: always()
        run: |
          STATUS="${{ job.status }}"
          COLOR="#e01e5a"
          if [ "$STATUS" = "success" ]; then
            COLOR="#2eb886"
          fi

          REPORT_FILE="${{ steps.upload_report.outputs.report_file }}"
          if [ -n "$REPORT_FILE" ]; then
            REPORT_NOTE="üìÑ Report uploaded: \`$(basename $REPORT_FILE)\`"
          else
            REPORT_NOTE="‚ö†Ô∏è No HTML report was generated."
          fi

          curl -X POST \
            -H 'Content-type: application/json' \
            --data "{
              \"text\": \"*Postman Tests Status:* \`$STATUS\`\n$REPORT_NOTE\nüîó <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}> View full run in GitHub Actions.\",
              \"attachments\": [
                {
                  \"color\": \"$COLOR\",
                  \"fields\": [
                    {
                      \"title\": \"Workflow\",
                      \"value\": \"${{ github.workflow }}\",
                      \"short\": true
                    },
                    {
                      \"title\": \"Branch\",
                      \"value\": \"${{ github.ref_name }}\",
                      \"short\": true
                    },
                    {
                      \"title\": \"Commit\",
                      \"value\": \"${{ github.sha }}\",
                      \"short\": false
                    }
                  ]
                }
              ]
            }" \
            ${{ secrets.SLACK_WEBHOOK }}
